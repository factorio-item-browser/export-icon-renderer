name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version:
          - "1.15"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout/@v2

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-mod-

      - name: Install dependencies
        run: go mod vendor -v

      - name: Run go test
        run: go test -ldflags "-s -w" -coverprofile coverage.txt -covermode atomic ./cmd/... ./pkg/...

      - name: Check coverage.txt existence
        id: check-coverage-file
        if: ${{ always() }}
        uses: andstor/file-existence-action@v1
        with:
          files: coverage.txt

      - name: Upload coverage as artifacts
        if: ${{ always() && steps.check-coverage-file.outputs.files_exists == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.go-version }}
          path: coverage.txt

      - name: Upload coverage to Codecov
        if: ${{ always() && steps.check-coverage-file.outputs.files_exists == 'true' }}
        uses: codecov/codecov-action@v1
        with:
          name: coverage-${{ matrix.go-version }}
          file: coverage.txt

  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout/@v2

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: "1.15"

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-mod-

      - name: Install dependencies
        run: go mod vendor -v

      - name: Run go vet
        run: go vet -ldflags "-s -w" ./cmd/... ./pkg/...
